#pragma once
class HolographicPlatform{
	public:
		void _computeSpaceHash(HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void _insertIntoMap(HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces,Matrix &);
		void _makeTransform(HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void _prepPlatformSpecificTransforms(void);
		void addToHMDPositionSpring(Vec3 const&);
		void defaultLSRPlane(HolographicPlatform::MCLocation);
		void delayForNextFingerPress(int);
		void drawCubemapInMono(void);
		void drawHolographicBorders(void);
		void forceControllerUsage(void);
		void getAmbientBoost(void);
		void getDefaultHalfHoloScreenWidth(void);
		void getGazeCastResultPS(Vec3 &,Vec3 &,Vec3 &);
		void getLastLSRPlanePosAndNormPS(Vec3 &,Vec3 &);
		void getPreferredUIAspectRatio(void);
		void getSRCastDistance(void);
		void getTransformTranslation(Vec3 &,HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void getTransformXDir(Vec3 &,HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void getTransformYDir(Vec3 &,HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void getTransformZDir(Vec3 &,HolographicPlatform::MinecraftSpaces,HolographicPlatform::MinecraftSpaces);
		void getViewableScreenSize(float);
		void holographicMode(void);
		void init(Options &);
		void isGazeDevicePresent(void);
		void isGestureDevicePresent(void);
		void isLocated(void);
		void isPrimaryHandHeld(void);
		void isSecondaryHandHeld(void);
		void isVRMode(void);
		void onAppFocusGained(void);
		void onAppFocusLost(void);
		void removeFromHMDPositionSpring(Vec3 const&);
		void renderSRData(float,float);
		void resetBaseFrameOfReference(float,bool);
		void resetEnvironmentScan(void);
		void resetScreenLocationOffset(void);
		void separateEyePasses(void);
		void setHoloviewerLocation(Matrix const&);
		void setHoloviewerLocation(Vec3 const&,float const*,float,bool);
		void setNewFrameOfReferenceFrameData(HolographicPlatform::HoloFrameOfReferenceSetupData const&);
		void setRealityAnchorLocation(Matrix const&);
		void setScreenLocation(Matrix const&);
		void setScreenLocation(Vec3 const&,float const*,float);
		void setScreenLocationOffset(Vec3 const&);
		void startEnvironmentScanning(void);
		void stopEnvironmentScanning(void);
		void updateLSRPlane(HolographicPlatform::MCLocation,Vec3 const&);
		void ~HolographicPlatform();
		void ~HolographicPlatform();
};
