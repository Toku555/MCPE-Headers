#pragma once
class ResourcePack{
	public:
		ResourcePack(std::string const&,ResourcePack::PackType,Offer *,bool);
		ResourcePack(std::string const&,ResourcePack::PackType,Offer *,bool);
		ResourcePack(std::string const&,ResourcePack::PackType,Offer *,bool);
		void getDescription(void);
		void getDescription(void);
		void getIconPath(void);
		void getIconPath(void);
		void getLocationForKeyArt(void);
		void getLocationForKeyArt(void);
		void getName(void);
		void getName(void);
		void getOffer(void);
		void getOffer(void);
		void getPackId(void);
		void getPackId(void);
		void getPath(void);
		void getPath(void);
		void getPrice(void);
		void getResource(std::string const&,std::string &);
		void getResource(std::string const&,std::string &);
		void getResourcePath(std::string const&);
		void getResourcePath(std::string const&);
		void getResourcesJson(std::string &);
		void getResourcesJson(std::string &);
		void getScreenshotLocationByIndex(int);
		void getScreenshotLocationByIndex(int);
		void hasResource(std::string const&);
		void hasResource(std::string const&);
		void isPremium(void);
		void isPremium(void);
		void isVanilla(void);
		void isVanilla(void);
		void isZipped(void);
		void isZipped(void);
		void loadResourceList(std::string);
		void populateResourceList(std::string const&);
		void populateResourceList(std::string const&);
		void premiumLocked(void);
		void premiumLocked(void);
		void ~ResourcePack();
		void ~ResourcePack();
		void ~ResourcePack();
		void ~ResourcePack();
};
