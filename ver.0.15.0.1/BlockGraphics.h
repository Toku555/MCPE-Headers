#pragma once
class BlockGraphics{
	public:
		BlockGraphics(std::string const&);
		BlockGraphics(std::string const&);
		void SoundType(std::string const&,float,float);
		void SoundType(std::string const&,float,float);
		void SoundType(std::string const&,std::string const&,float,float);
		void SoundType(std::string const&,std::string const&,float,float);
		void SoundType(std::string const&,std::string const&,std::string const&,float,float);
		void SoundType(std::string const&,std::string const&,std::string const&,float,float);
		void getBreakSound(void);
		void getPitch(void);
		void getPlaceSound(void);
		void getStepSound(void);
		void getVolume(void);
		void ~SoundType();
		void animateTick(BlockSource &,BlockPos const&,Random &);
		void animateTick(BlockSource &,BlockPos const&,Random &);
		void getBlock(void);
		void getBlock(void);
		void getBlockShape(void);
		void getBlockShape(void);
		void getCarriedTexture(signed char,int);
		void getCarriedTexture(signed char,int);
		void getColor(BlockSource &,BlockPos const&);
		void getColor(BlockSource &,BlockPos const&);
		void getColor(int);
		void getColor(int);
		void getColorForParticle(BlockSource &,BlockPos const&,int);
		void getColorForParticle(BlockSource &,BlockPos const&,int);
		void getExtraRenderLayers(void);
		void getExtraRenderLayers(void);
		void getFaceTextureIsotropic(void);
		void getIconYOffset(void);
		void getIconYOffset(void);
		void getMapColor(FullBlock const&);
		void getMapColor(void);
		void getRenderLayer(BlockSource &,BlockPos const&);
		void getRenderLayer(BlockSource &,BlockPos const&);
		void getRenderLayer(void);
		void getSoundType(void);
		void getTexture(signed char);
		void getTexture(signed char);
		void getTexture(signed char,int);
		void getTexture(signed char,int);
		void getTextureItem(std::string const&);
		void getTextureUVCoordinateSet(std::string const&,int);
		void getTextureUVCoordinateSet(std::string const&,int);
		void getVisualShape(BlockSource &,BlockPos const&,AABB &,bool);
		void getVisualShape(BlockSource &,BlockPos const&,AABB &,bool);
		void getVisualShape(uchar,AABB &,bool);
		void getVisualShape(uchar,AABB &,bool);
		void initBlocks(void);
		void initBlocks(void);
		void isAlphaTested(void);
		void isFullAndOpaque(Block const&);
		void isFullAndOpaque(Block const&);
		void isFullAndOpaque(void);
		void isSeasonTinted(BlockSource &,BlockPos const&);
		void isSeasonTinted(BlockSource &,BlockPos const&);
		void isTextureIsotropic(signed char);
		void isTextureIsotropic(signed char);
		void lookupByName(std::string const&,bool);
		void onGraphicsModeChanged(bool,bool);
		void onGraphicsModeChanged(bool,bool);
		void prepareRender(BlockSource &,BlockPos const&);
		void prepareRender(BlockSource &,BlockPos const&);
		void randomlyModifyPosition(BlockPos const&);
		void randomlyModifyPosition(BlockPos const&);
		void randomlyModifyPosition(BlockPos const&,int &);
		void randomlyModifyPosition(BlockPos const&,int &);
		void reloadBlockUVs(TextureAtlas &);
		void setAllFacesIsotropic(void);
		void setBlockShape(BlockGraphics&,Json::Value const&);
		void setBlockShape(BlockGraphics&,Json::Value const&);
		void setBlockShape(BlockShape);
		void setCarriedTextureItem(std::string const&);
		void setCarriedTextureItem(std::string const&,std::string const&,std::string const&);
		void setCarriedTextureItem(std::string const&,std::string const&,std::string const&);
		void setCarriedTextures(BlockGraphics&,Json::Value const&);
		void setCarriedTextures(BlockGraphics&,Json::Value const&);
		void setMapColor(Color const&);
		void setSoundType(BlockGraphics::SoundType const&);
		void setSoundType(BlockGraphics::SoundType const&);
		void setTextureAtlas(std::shared_ptr<TextureAtlas>);
		void setTextureAtlas(std::shared_ptr<TextureAtlas>);
		void setTextureIsotropic(BlockGraphics&,Json::Value const&);
		void setTextureIsotropic(BlockGraphics&,Json::Value const&);
		void setTextureIsotropic(uint);
		void setTextureItem(std::string const&);
		void setTextureItem(std::string const&,std::string const&,std::string const&);
		void setTextureItem(std::string const&,std::string const&,std::string const&,std::string const&,std::string const&,std::string const&);
		void setTextureItem(std::string const&,std::string const&,std::string const&,std::string const&,std::string const&,std::string const&);
		void setTextures(BlockGraphics&,Json::Value const&);
		void setTextures(BlockGraphics&,Json::Value const&);
		void setVisualShape(AABB const&);
		void setVisualShape(AABB const&);
		void setVisualShape(Vec3 const&,Vec3 const&);
		void setVisualShape(Vec3 const&,Vec3 const&);
		void shouldRenderFace(BlockSource &,BlockPos const&,signed char,AABB const&);
		void shouldRenderFace(BlockSource &,BlockPos const&,signed char,AABB const&);
		void teardownBlocks(void);
		void ~BlockGraphics();
		void ~BlockGraphics();
		void ~BlockGraphics();
		void ~BlockGraphics();
};
