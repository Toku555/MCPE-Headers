#pragma once
class ScrollViewComponent{
	public:
		ScrollViewComponent(std::shared_ptr<UIControl> &);
		ScrollViewComponent(std::shared_ptr<UIControl> &);
		void _getContentSize(void);
		void _getContentSize(void);
		void _handlePointerMove(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handlePointerMove(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleScrollDirection(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleScrollDirection(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleScrollRequest(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleScrollRequest(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleTouchScrollButton(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleTrackScrollButton(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _handleTrackScrollButton(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent &,ComponentReceiveActionType &);
		void _makeScrollBarVisible(void);
		void _makeScrollBarVisible(void);
		void _updateDynamicsAndScrollPosition(mce::TimeStep const&);
		void _updateDynamicsAndScrollPosition(mce::TimeStep const&);
		void _updateScroll(glm::detail::tvec2<float> const&,bool);
		void _updateScroll(glm::detail::tvec2<float> const&,bool);
		void _updateScrollBoxSize(void);
		void _updateScrollBoxSize(void);
		void _updateScrollFromScrollBox(ScreenEvent &);
		void _updateScrollFromScrollBox(ScreenEvent &);
		void _updateTouchScrollbarVisibility(mce::TimeStep const&);
		void _updateTouchScrollbarVisibility(mce::TimeStep const&);
		void allowsTouchScrolling(void);
		void animationScrollingTick(mce::TimeStep const&);
		void clone(std::shared_ptr<UIControl> &);
		void clone(std::shared_ptr<UIControl> &);
		void getScrollBox(void);
		void getScrollContent(void);
		void getScrollTrack(void);
		void getScrollViewPort(void);
		void getScrollbarBoxTrackButton(void);
		void getScrollbarBoxTrackButton(void);
		void handleScrollDirection(VisualTree &,AnimationController &,ScreenInputContext &,glm::detail::tvec2<float> const&,glm::detail::tvec2<float> const&,bool);
		void handleScrollDirection(VisualTree &,AnimationController &,ScreenInputContext &,glm::detail::tvec2<float> const&,glm::detail::tvec2<float> const&,bool);
		void isPointInViewPort(glm::detail::tvec2<float> const&);
		void isPointInViewPort(glm::detail::tvec2<float> const&);
		void receive(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent);
		void receive(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent);
		void setGestureControlMode(bool);
		void setGestureControlMode(bool);
		void setScrollBox(std::shared_ptr<UIControl> &);
		void setScrollBox(std::shared_ptr<UIControl> &);
		void setScrollBoxPressed(ButtonState);
		void setScrollBoxPressed(ButtonState);
		void setScrollContent(std::shared_ptr<UIControl> &);
		void setScrollContent(std::shared_ptr<UIControl> &);
		void setScrollSpeed(float);
		void setScrollSpeed(float);
		void setScrollTrack(std::shared_ptr<UIControl> &);
		void setScrollTrack(std::shared_ptr<UIControl> &);
		void setScrollViewPort(std::shared_ptr<UIControl> &);
		void setScrollViewPort(std::shared_ptr<UIControl> &);
		void setScrollbarActiveEventId(short);
		void setScrollbarActiveEventId(short);
		void setScrollbarBoxTrackButton(short);
		void setScrollbarBoxTrackButton(short);
		void setScrollbarReleasedEventId(short);
		void setScrollbarReleasedEventId(short);
		void setScrollbarTouchButton(short);
		void setScrollbarTouchButton(short);
		void setTouchMode(bool);
		void setTouchMode(bool);
		void ~ScrollViewComponent();
		void ~ScrollViewComponent();
		void ~ScrollViewComponent();
		void ~ScrollViewComponent();
};
