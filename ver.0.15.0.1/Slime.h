#pragma once
class Slime{
	public:
		Slime(BlockSource &);
		Slime(BlockSource &);
		Slime(BlockSource &);
		void _getDeathSound(void);
		void _getDeathSound(void);
		void _getHurtSound(void);
		void _getHurtSound(void);
		void addAdditionalSaveData(CompoundTag &);
		void addAdditionalSaveData(CompoundTag &);
		void aiStep(void);
		void aiStep(void);
		void canDealDamage(void);
		void canDealDamage(void);
		void canSpawn(bool);
		void canSpawn(bool);
		void createChild(int);
		void createChild(int);
		void decreaseSquish(void);
		void decreaseSquish(void);
		void doPlayJumpSound(void);
		void doPlayJumpSound(void);
		void doPlayLandSound(void);
		void doPlayLandSound(void);
		void finalizeMobSpawn(void);
		void finalizeMobSpawn(void);
		void findAttackTarget(void);
		void findAttackTarget(void);
		void getDeathLoot(void);
		void getDeathLoot(void);
		void getEntityTypeId(void);
		void getEntityTypeId(void);
		void getExperienceReward(void);
		void getExperienceReward(void);
		void getJumpDelay(void);
		void getJumpDelay(void);
		void getOldSquishValue(void);
		void getOldSquishValue(void);
		void getShadowRadius(void);
		void getShadowRadius(void);
		void getSlimeSize(void);
		void getSlimeSize(void);
		void getSquishSound(void);
		void getSquishSound(void);
		void getSquishValue(void);
		void getSquishValue(void);
		void getTargetSquish(void);
		void justJumped(void);
		void justLanded(void);
		void justLanded(void);
		void normalTick(void);
		void normalTick(void);
		void onSynchedDataUpdate(int);
		void onSynchedDataUpdate(int);
		void playJumpSound(void);
		void playJumpSound(void);
		void playLandSound(void);
		void playLandSound(void);
		void playerTouch(Player &);
		void playerTouch(Player &);
		void readAdditionalSaveData(CompoundTag const&);
		void readAdditionalSaveData(CompoundTag const&);
		void registerAttributes(void);
		void registerAttributes(void);
		void remove(void);
		void remove(void);
		void setSlimeSize(int);
		void setSlimeSize(int);
		void useNewAi(void);
		void useNewAi(void);
		void ~Slime();
		void ~Slime();
};
