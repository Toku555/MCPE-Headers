#pragma once
namespace j{
	class pplx{
		public:
		void _Cancel(void);
		void ~_ExceptionHolder();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void ~_Task_completion_event_impl();
		void _ScheduleTask(pplx::details::_TaskProcHandle *,pplx::details::_TaskInliningMode);
		void ~_Task_impl_base();
		void ~_Task_impl_base();
		void ~_Task_impl_base();
		void set(int);
		void set(uint);
		void set(ulong long);
	}
};
