#pragma once
namespace Concurrency{
	class streams{
		public:
		void _verify_and_return_task<uint>(char const*,pplx::task<uint> &);
		void _verify_and_return_task<uint>(char const*,pplx::task<uint> &);
		void _verify_and_throw(char const*);
		void basic_istream(Concurrency::streams::streambuf<uchar>);
		void basic_istream(Concurrency::streams::streambuf<uchar>);
		void helper(void);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void read_to_end(Concurrency::streams::streambuf<uchar>);
		void _verify_and_throw(char const*);
		void close(std::__exception_ptr::exception_ptr);
		void close(std::__exception_ptr::exception_ptr);
		void close(void);
		void close(void);
		void helper(void);
		void string>(std::string);
		void string>(std::string);
		void allocator<uchar>>>(std::vector<uchar,std::allocator<uchar>>);
		void allocator<uchar>>>(std::vector<uchar,std::allocator<uchar>>);
		void container_buffer(std::_Ios_Openmode);
		void container_buffer(std::_Ios_Openmode);
		void container_buffer(std::string,std::_Ios_Openmode);
		void container_buffer(std::string,std::_Ios_Openmode);
		void ~container_buffer();
		void ~container_buffer();
		void container_buffer(std::_Ios_Openmode);
		void container_buffer(std::_Ios_Openmode);
		void container_buffer(std::vector<uchar,std::allocator<uchar>>,std::_Ios_Openmode);
		void container_buffer(std::vector<uchar,std::allocator<uchar>>,std::_Ios_Openmode);
		void ~container_buffer();
		void ~container_buffer();
		void _alloc(uint);
		void _alloc(uint);
		void _bumpc(void);
		void _bumpc(void);
		void _commit(uint);
		void _commit(uint);
		void _getc(void);
		void _getc(void);
		void _getn(char *,uint);
		void _getn(char *,uint);
		void _nextc(void);
		void _nextc(void);
		void _putc(char);
		void _putc(char);
		void _putn(char const*,uint);
		void _putn(char const*,uint);
		void _sbumpc(void);
		void _sbumpc(void);
		void _scopy(char *,uint);
		void _scopy(char *,uint);
		void _sgetc(void);
		void _sgetc(void);
		void _sync(void);
		void _sync(void);
		void _ungetc(void);
		void _ungetc(void);
		void acquire(char *&,uint &);
		void acquire(char *&,uint &);
		void basic_container_buffer(std::_Ios_Openmode);
		void basic_container_buffer(std::_Ios_Openmode);
		void basic_container_buffer(std::string,std::_Ios_Openmode);
		void basic_container_buffer(std::string,std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void can_seek(void);
		void can_seek(void);
		void getpos(std::_Ios_Openmode);
		void getpos(std::_Ios_Openmode);
		void has_size(void);
		void has_size(void);
		void in_avail(void);
		void in_avail(void);
		void read_byte(bool);
		void read_byte(bool);
		void release(char *,uint);
		void release(char *,uint);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void size(void);
		void size(void);
		void validate_mode(std::_Ios_Openmode);
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void _alloc(uint);
		void _alloc(uint);
		void _bumpc(void);
		void _bumpc(void);
		void _commit(uint);
		void _commit(uint);
		void _getc(void);
		void _getc(void);
		void _getn(uchar *,uint);
		void _getn(uchar *,uint);
		void _nextc(void);
		void _nextc(void);
		void _putc(uchar);
		void _putc(uchar);
		void _putn(uchar const*,uint);
		void _putn(uchar const*,uint);
		void _sbumpc(void);
		void _sbumpc(void);
		void _scopy(uchar *,uint);
		void _scopy(uchar *,uint);
		void _sgetc(void);
		void _sgetc(void);
		void _sync(void);
		void _sync(void);
		void _ungetc(void);
		void _ungetc(void);
		void acquire(uchar *&,uint &);
		void acquire(uchar *&,uint &);
		void basic_container_buffer(std::_Ios_Openmode);
		void basic_container_buffer(std::_Ios_Openmode);
		void basic_container_buffer(std::vector<uchar,std::allocator<uchar>>,std::_Ios_Openmode);
		void basic_container_buffer(std::vector<uchar,std::allocator<uchar>>,std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void can_seek(void);
		void can_seek(void);
		void getpos(std::_Ios_Openmode);
		void getpos(std::_Ios_Openmode);
		void has_size(void);
		void has_size(void);
		void in_avail(void);
		void in_avail(void);
		void release(uchar *,uint);
		void release(uchar *,uint);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void size(void);
		void size(void);
		void validate_mode(std::_Ios_Openmode);
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void ~basic_container_buffer();
		void _alloc(uint);
		void _alloc(uint);
		void _bumpc(void);
		void _bumpc(void);
		void _close_write(void);
		void _close_write(void);
		void _commit(uint);
		void _commit(uint);
		void _getc(void);
		void _getc(void);
		void _getn(uchar *,uint);
		void _getn(uchar *,uint);
		void _getn(uchar *,uint);
		void _getn(uchar *,uint);
		void _nextc(void);
		void _nextc(void);
		void _nextc(void);
		void _nextc(void);
		void _putc(uchar);
		void _putc(uchar);
		void _putn(uchar const*,uint);
		void _putn(uchar const*,uint);
		void _sbumpc(void);
		void _sbumpc(void);
		void _scopy(uchar *,uint);
		void _scopy(uchar *,uint);
		void _sgetc(void);
		void _sgetc(void);
		void _sgetn(uchar *,uint);
		void _sgetn(uchar *,uint);
		void _sync(void);
		void _sync(void);
		void _ungetc(void);
		void _ungetc(void);
		void acquire(uchar *&,uint &);
		void acquire(uchar *&,uint &);
		void basic_producer_consumer_buffer(uint);
		void basic_producer_consumer_buffer(uint);
		void buffer_size(std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void can_seek(void);
		void can_seek(void);
		void enqueue_request(Concurrency::streams::details::basic_producer_consumer_buffer<uchar>::_request);
		void enqueue_request(Concurrency::streams::details::basic_producer_consumer_buffer<uchar>::_request);
		void fulfill_outstanding(void);
		void fulfill_outstanding(void);
		void getpos(std::_Ios_Openmode);
		void getpos(std::_Ios_Openmode);
		void has_size(void);
		void has_size(void);
		void in_avail(void);
		void in_avail(void);
		void read_byte(bool);
		void read_byte(bool);
		void release(uchar *,uint);
		void release(uchar *,uint);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void update_read_head(uint);
		void update_read_head(uint);
		void write(uchar const*,uint);
		void ~basic_producer_consumer_buffer();
		void ~basic_producer_consumer_buffer();
		void ~basic_producer_consumer_buffer();
		void ~basic_producer_consumer_buffer();
		void _close_read(void);
		void _close_read(void);
		void _close_write(void);
		void _close_write(void);
		void _putn(char const*,uint,bool);
		void _putn(char const*,uint,bool);
		void alloc(uint);
		void bumpc(void);
		void bumpc(void);
		void can_read(void);
		void can_read(void);
		void can_write(void);
		void can_write(void);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void commit(uint);
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void create_exception_checked_value_task<int>(int const&);
		void create_exception_checked_value_task<int>(int const&);
		void create_exception_checked_value_task<uint>(uint const&);
		void create_exception_checked_value_task<uint>(uint const&);
		void exception(void);
		void exception(void);
		void getc(void);
		void getc(void);
		void getn(char *,uint);
		void getn(char *,uint);
		void is_eof(void);
		void is_eof(void);
		void is_open(void);
		void is_open(void);
		void nextc(void);
		void nextc(void);
		void putc(char);
		void putc(char);
		void putn(char const*,uint);
		void putn(char const*,uint);
		void putn_nocopy(char const*,uint);
		void putn_nocopy(char const*,uint);
		void sbumpc(void);
		void sbumpc(void);
		void scopy(char *,uint);
		void scopy(char *,uint);
		void sgetc(void);
		void sgetc(void);
		void size(void);
		void size(void);
		void sync(void);
		void sync(void);
		void ungetc(void);
		void ungetc(void);
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void _close_read(void);
		void _close_read(void);
		void _close_write(void);
		void _close_write(void);
		void _putn(uchar const*,uint,bool);
		void _putn(uchar const*,uint,bool);
		void alloc(uint);
		void bumpc(void);
		void bumpc(void);
		void can_read(void);
		void can_read(void);
		void can_write(void);
		void can_write(void);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void commit(uint);
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void function<bool ();
		void create_exception_checked_value_task<int>(int const&);
		void create_exception_checked_value_task<int>(int const&);
		void create_exception_checked_value_task<uint>(uint const&);
		void create_exception_checked_value_task<uint>(uint const&);
		void exception(void);
		void exception(void);
		void getc(void);
		void getc(void);
		void getn(uchar *,uint);
		void getn(uchar *,uint);
		void is_eof(void);
		void is_eof(void);
		void is_open(void);
		void is_open(void);
		void nextc(void);
		void nextc(void);
		void putc(uchar);
		void putc(uchar);
		void putn(uchar const*,uint);
		void putn(uchar const*,uint);
		void putn_nocopy(uchar const*,uint);
		void putn_nocopy(uchar const*,uint);
		void sbumpc(void);
		void sbumpc(void);
		void scopy(uchar *,uint);
		void scopy(uchar *,uint);
		void sgetc(void);
		void sgetc(void);
		void size(void);
		void size(void);
		void sync(void);
		void sync(void);
		void ungetc(void);
		void ungetc(void);
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void ~streambuf_state_manager();
		void producer_consumer_buffer(uint);
		void producer_consumer_buffer(uint);
		void ~producer_consumer_buffer();
		void ~producer_consumer_buffer();
		void acquire(char *&,uint &);
		void acquire(char *&,uint &);
		void alloc(uint);
		void alloc(uint);
		void buffer_size(std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void bumpc(void);
		void bumpc(void);
		void can_read(void);
		void can_read(void);
		void can_seek(void);
		void can_seek(void);
		void can_write(void);
		void can_write(void);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void commit(uint);
		void commit(uint);
		void exception(void);
		void exception(void);
		void get_base(void);
		void getc(void);
		void getc(void);
		void getn(char *,uint);
		void getn(char *,uint);
		void getpos(std::_Ios_Openmode);
		void getpos(std::_Ios_Openmode);
		void has_size(void);
		void has_size(void);
		void in_avail(void);
		void in_avail(void);
		void is_eof(void);
		void is_eof(void);
		void is_open(void);
		void is_open(void);
		void nextc(void);
		void nextc(void);
		void putc(char);
		void putc(char);
		void putn(char const*,uint);
		void putn(char const*,uint);
		void putn_nocopy(char const*,uint);
		void putn_nocopy(char const*,uint);
		void release(char *,uint);
		void release(char *,uint);
		void sbumpc(void);
		void sbumpc(void);
		void scopy(char *,uint);
		void scopy(char *,uint);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void sgetc(void);
		void sgetc(void);
		void size(void);
		void size(void);
		void sync(void);
		void sync(void);
		void ungetc(void);
		void ungetc(void);
		void ~streambuf();
		void ~streambuf();
		void ~streambuf();
		void ~streambuf();
		void acquire(uchar *&,uint &);
		void acquire(uchar *&,uint &);
		void alloc(uint);
		void alloc(uint);
		void buffer_size(std::_Ios_Openmode);
		void buffer_size(std::_Ios_Openmode);
		void bumpc(void);
		void bumpc(void);
		void can_read(void);
		void can_read(void);
		void can_seek(void);
		void can_seek(void);
		void can_write(void);
		void can_write(void);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void close(std::_Ios_Openmode,std::__exception_ptr::exception_ptr);
		void commit(uint);
		void commit(uint);
		void create_istream(void);
		void create_ostream(void);
		void exception(void);
		void exception(void);
		void get_base(void);
		void getc(void);
		void getc(void);
		void getn(uchar *,uint);
		void getn(uchar *,uint);
		void getpos(std::_Ios_Openmode);
		void getpos(std::_Ios_Openmode);
		void has_size(void);
		void has_size(void);
		void in_avail(void);
		void in_avail(void);
		void is_eof(void);
		void is_eof(void);
		void is_open(void);
		void is_open(void);
		void nextc(void);
		void nextc(void);
		void putc(uchar);
		void putc(uchar);
		void putn(uchar const*,uint);
		void putn(uchar const*,uint);
		void putn_nocopy(uchar const*,uint);
		void putn_nocopy(uchar const*,uint);
		void release(uchar *,uint);
		void release(uchar *,uint);
		void sbumpc(void);
		void sbumpc(void);
		void scopy(uchar *,uint);
		void scopy(uchar *,uint);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekoff(long long,std::_Ios_Seekdir,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void seekpos(std::fpos<mbstate_t>,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void set_buffer_size(uint,std::_Ios_Openmode);
		void sgetc(void);
		void sgetc(void);
		void size(void);
		void size(void);
		void sync(void);
		void sync(void);
		void ungetc(void);
		void ungetc(void);
		void ~streambuf();
		void ~streambuf();
		void ~streambuf();
		void ~streambuf();
	}
};
