#pragma once
class RealmsSettingsScreenController{
	public:
		RealmsSettingsScreenController(std::shared_ptr<MinecraftScreenModel>,Realms::World const&);
		RealmsSettingsScreenController(std::shared_ptr<MinecraftScreenModel>,Realms::World const&);
		void _cancelAsyncCallsAndExitProgressScreen(void);
		void _closeModalDialog(void);
		void _closeModalDialog(void);
		void _confirmCloseRealm(void);
		void _confirmCloseRealm(void);
		void _confirmResetRealm(void);
		void _confirmResetRealm(void);
		void _errorDialogCreateRealmFail(void);
		void _errorDialogCreateRealmFail(void);
		void _errorDialogPurchaseOutstanding(void);
		void _errorDialogPurchaseOutstanding(void);
		void _extendConsumableRealm(void);
		void _extendConsumableRealm(void);
		void _extendConsumableRealmHandler(RealmsOfferPeriod);
		void _extendConsumableRealmHandler(RealmsOfferPeriod);
		void _getDifficultyStringFromIndex(int);
		void _getDifficultyStringFromIndex(int);
		void _getDurationLabelText(void);
		void _getDurationLabelText(void);
		void _getIsExtendConsumableButonVisible(void);
		void _getIsManageSubscriptionButonVisible(void);
		void _getLocalizedStoreDisplayName(std::string &);
		void _getLocalizedStoreDisplayName(std::string &);
		void _getMaxPlayerLabelText(void);
		void _getMaxPlayerLabelText(void);
		void _getSubscriptionOriginLabelText(void);
		void _getSubscriptionOriginLabelText(void);
		void _goToManageSubscriptionLink(void);
		void _goToManageSubscriptionLink(void);
		void _handleTabChanged(int);
		void _hasWorldInfoChanged(void);
		void _joinRealm(void);
		void _joinRealm(void);
		void _openCloseRealm(bool);
		void _openCloseRealm(bool);
		void _openModalDialog(std::string const&);
		void _openModalDialog(std::string const&);
		void _querySubscriptionInfo(void);
		void _refreshWorldInfo(void);
		void _refreshWorldInfo(void);
		void _registerBindings(void);
		void _registerBindings(void);
		void _registerEventHandlers(void);
		void _registerEventHandlers(void);
		void _resetRealm(void);
		void _resetRealm(void);
		void _saveAndExitScreen(void);
		void _saveAndJoinRealm(void);
		void _saveSettings(bool,bool);
		void _saveSettings(bool,bool);
		void _saveSettingsAndExitScreen(void);
		void _saveSettingsAndJoinRealm(void);
		void function<void ();
		void function<void ();
		void _showErrorPopupAndExitScreenAfterDismissed(std::string,std::string);
		void _showErrorPopupAndExitScreenAfterDismissed(std::string,std::string);
		void _updateSubscriptionInformation(Realms::SubscriptionInfo);
		void _updateSubscriptionInformation(Realms::SubscriptionInfo);
		void getAdditionalScreenInfo(void);
		void getAdditionalScreenInfo(void);
		void onOpen(void);
		void onOpen(void);
		void tick(void);
		void tick(void);
		void ~RealmsSettingsScreenController();
		void ~RealmsSettingsScreenController();
		void ~RealmsSettingsScreenController();
		void ~RealmsSettingsScreenController();
};
