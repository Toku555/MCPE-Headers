#pragma once
class BlockSource{
	public:
		BlockSource(Level &,Dimension &,ChunkSource &,bool,bool);
		BlockSource(Level &,Dimension &,ChunkSource &,bool,bool);
		void _fireColumnDirty(int,int,int,int,int);
		void _fireColumnDirty(int,int,int,int,int);
		void _getSkyDarken(void);
		void _isIceAt(BlockPos const&);
		void _isIceAt(BlockPos const&);
		void _isWaterAt(BlockPos const&);
		void _tileChanged(BlockPos const&,FullBlock,FullBlock,int);
		void addListener(BlockSourceListener &);
		void addListener(BlockSourceListener &);
		void blockEvent(BlockPos const&,int,int);
		void blockEvent(BlockPos const&,int,int);
		void blockEvent(int,int,int,int,int);
		void blockEvent(int,int,int,int,int);
		void canSeeSky(BlockPos const&);
		void canSeeSky(BlockPos const&);
		void canSeeSky(int,int,int);
		void canSeeSky(int,int,int);
		void checkIsTopRainBlockPos(BlockPos const&);
		void checkIsTopRainBlockPos(BlockPos const&);
		void clearCachedLastChunk(void);
		void clip(Vec3 const&,Vec3 const&,bool,bool,int);
		void clip(Vec3 const&,Vec3 const&,bool,bool,int);
		void containsAny(BlockPos const&,BlockPos const&);
		void containsAnyLiquid(AABB const&);
		void containsAnyLiquid(AABB const&);
		void containsFireBlock(AABB const&);
		void containsFireBlock(AABB const&);
		void containsLiquid(AABB const&,MaterialType);
		void containsLiquid(AABB const&,MaterialType);
		void containsMaterial(AABB const&,MaterialType);
		void containsMaterial(AABB const&,MaterialType);
		void fetchAABBs(AABB const&,bool);
		void fetchAABBs(AABB const&,bool);
		void fetchCollisionShapes(BlockSource&,AABB const&,float *,bool,Entity *);
		void fetchCollisionShapes(BlockSource&,AABB const&,float *,bool,Entity *);
		void findNextTopSolidBlockUnder(BlockPos &);
		void findNextTopSolidBlockUnder(BlockPos &);
		void fireAreaChanged(BlockPos const&,BlockPos const&);
		void fireAreaChanged(BlockPos const&,BlockPos const&);
		void fireBlockChanged(BlockPos const&,FullBlock,FullBlock,int);
		void fireBlockChanged(BlockPos const&,FullBlock,FullBlock,int);
		void fireBlockEntityChanged(BlockEntity &);
		void fireBlockEntityChanged(BlockEntity &);
		void fireBlockEntityRemoved(std::unique_ptr<BlockEntity,std::default_delete<BlockEntity>>);
		void fireBlockEntityRemoved(std::unique_ptr<BlockEntity,std::default_delete<BlockEntity>>);
		void fireBlockEvent(int,int,int,int,int);
		void fireBlocksDirty(BlockPos const&,BlockPos const&);
		void fireBlocksDirty(BlockPos const&,BlockPos const&);
		void fireBrightnessChanged(BlockPos const&);
		void fireEntityChanged(Entity &);
		void fireEntityChanged(Entity &);
		void getBiome(BlockPos const&);
		void getBiome(BlockPos const&);
		void getBlock(BlockPos const&);
		void getBlock(BlockPos const&);
		void getBlock(int,int,int);
		void getBlock(int,int,int);
		void getBlockAndData(BlockPos const&);
		void getBlockAndData(BlockPos const&);
		void getBlockAndData(int,int,int);
		void getBlockAndData(int,int,int);
		void getBlockEntity(BlockPos const&);
		void getBlockEntity(BlockPos const&);
		void getBlockEntity(int,int,int);
		void getBlockEntity(int,int,int);
		void getBlockID(BlockPos const&);
		void getBlockID(BlockPos const&);
		void getBlockID(int,int,int);
		void getBlockID(int,int,int);
		void getBrightness(BlockPos const&);
		void getBrightness(BlockPos const&);
		void getBrightness(LightLayer const&,BlockPos const&);
		void getBrightness(LightLayer const&,BlockPos const&);
		void getBrightness(LightLayer const&,int,int,int);
		void getBrightness(int,int,int);
		void getChunk(ChunkPos const&);
		void getChunk(ChunkPos const&);
		void getChunk(int,int);
		void getChunkAt(BlockPos const&);
		void getChunkAt(BlockPos const&);
		void getChunkAt(int,int,int);
		void getChunkSource(void);
		void getChunkSource(void);
		void getData(BlockPos const&);
		void getData(BlockPos const&);
		void getData(int,int,int);
		void getData(int,int,int);
		void getDimension(void);
		void getDimension(void);
		void getDimension(void);
		void getDimension(void);
		void getDimensionConst(void);
		void getDimensionConst(void);
		void getDimensionId(void);
		void getDimensionId(void);
		void getEntities(Entity *,AABB const&);
		void getEntities(Entity *,AABB const&);
		void getEntities(EntityType,AABB const&,Entity *);
		void getEntities(EntityType,AABB const&,Entity *);
		void getExtraData(BlockPos const&);
		void getExtraData(BlockPos const&);
		void getGrassColor(BlockPos const&);
		void getGrassColor(BlockPos const&);
		void getHeightmap(BlockPos const&);
		void getHeightmap(BlockPos const&);
		void getHeightmap(int,int);
		void getHeightmap(int,int);
		void getHeightmapPos(BlockPos const&);
		void getHeightmapPos(BlockPos const&);
		void getLevel(void);
		void getLevel(void);
		void getLevel(void);
		void getLevel(void);
		void getLevelConst(void);
		void getLevelConst(void);
		void getLightColor(BlockPos const&,Brightness);
		void getLightColor(BlockPos const&,Brightness);
		void getMaterial(BlockPos const&);
		void getMaterial(BlockPos const&);
		void getMaterial(int,int,int);
		void getMaterial(int,int,int);
		void getMobsAt(EntityType,BlockPos const&);
		void getMobsAt(EntityType,BlockPos const&);
		void getNearestEntityNotOfType(Entity *,Vec3 const&,float,EntityType);
		void getNearestEntityNotOfType(Entity *,Vec3 const&,float,EntityType);
		void getNearestEntityOfType(Entity *,AABB const&,EntityType);
		void getNearestEntityOfType(Entity *,AABB const&,EntityType);
		void getNearestEntityOfType(Entity *,Vec3 const&,float,EntityType);
		void getNearestEntityOfType(Entity *,Vec3 const&,float,EntityType);
		void getPublicSource(void);
		void getPublicSource(void);
		void getRawBrightness(BlockPos const&,bool);
		void getRawBrightness(BlockPos const&,bool);
		void getRawBrightness(int,int,int,bool);
		void getRawBrightness(int,int,int,bool);
		void getSeenPercent(Vec3 const&,AABB const&);
		void getSeenPercent(Vec3 const&,AABB const&);
		void getTickQueue(BlockPos const&);
		void getTickQueue(BlockPos const&);
		void getTopBlock(int,int &,int);
		void getTopRainBlockPos(BlockPos const&);
		void getTopRainBlockPos(BlockPos const&);
		void getTopSolidBlock(BlockPos const&,bool);
		void getTopSolidBlock(BlockPos const&,bool);
		void getTopSolidBlock(int,int,bool);
		void getTopSolidBlock(int,int,bool);
		void getWritableChunk(ChunkPos const&);
		void hasBlock(BlockPos const&);
		void hasBlock(BlockPos const&);
		void hasBlock(int,int,int);
		void hasChunksAt(AABB const&);
		void hasChunksAt(AABB const&);
		void hasChunksAt(BlockPos const&,BlockPos const&);
		void hasChunksAt(BlockPos const&,BlockPos const&);
		void hasChunksAt(BlockPos const&,int);
		void hasChunksAt(BlockPos const&,int);
		void hasChunksAt(Bounds const&);
		void hasChunksAt(Bounds const&);
		void hasChunksAt(int,int,int,int);
		void hasChunksAt(int,int,int,int);
		void isConsideredSolidBlock(BlockPos const&);
		void isConsideredSolidBlock(BlockPos const&);
		void isConsideredSolidBlock(int,int,int);
		void isEmptyBlock(BlockPos const&);
		void isEmptyBlock(BlockPos const&);
		void isEmptyBlock(int,int,int);
		void isEmptyBlock(int,int,int);
		void isHumidAt(BlockPos const&);
		void isHumidAt(BlockPos const&);
		void isInWall(Vec3 const&);
		void isInWall(Vec3 const&);
		void isOwnerThread(void);
		void isPositionUnderLiquid(BlockPos const&,MaterialType);
		void isPositionUnderLiquid(BlockPos const&,MaterialType);
		void isSnowTemperature(BlockPos const&);
		void isSnowTemperature(BlockPos const&);
		void isSolidBlockingBlock(BlockPos const&);
		void isSolidBlockingBlock(BlockPos const&);
		void isSolidBlockingBlock(int,int,int);
		void isSolidBlockingBlock(int,int,int);
		void isTopSolidBlocking(Block *,uchar);
		void isTopSolidBlocking(Block *,uchar);
		void isTopSolidBlocking(BlockPos const&);
		void isTopSolidBlocking(BlockPos const&);
		void isTopSolidBlocking(int,int,int);
		void isTopSolidBlocking(int,int,int);
		void isUnobstructedByEntities(AABB const&,Entity *);
		void isUnobstructedByEntities(AABB const&,Entity *);
		void mayPlace(BlockID,BlockPos const&,signed char,Mob *,bool,Entity *);
		void mayPlace(BlockID,BlockPos const&,signed char,Mob *,bool,Entity *);
		void neighborChanged(BlockPos const&,BlockPos const&);
		void neighborChanged(BlockPos const&,BlockPos const&);
		void onChunkDiscarded(LevelChunk &);
		void onChunkDiscarded(LevelChunk &);
		void removeBlock(BlockPos const&);
		void removeBlock(BlockPos const&);
		void removeBlock(int,int,int);
		void removeBlock(int,int,int);
		void removeBlockEntity(BlockPos const&);
		void removeBlockEntity(BlockPos const&);
		void removeListener(BlockSourceListener &);
		void removeListener(BlockSourceListener &);
		void runLightUpdates(LightLayer const&,BlockPos const&,BlockPos const&);
		void runLightUpdates(LightLayer const&,BlockPos const&,BlockPos const&);
		void setBlock(BlockPos const&,BlockID,int);
		void setBlock(BlockPos const&,BlockID,int);
		void setBlock(int,int,int,BlockID,int);
		void setBlock(int,int,int,BlockID,int);
		void setBlockAndData(BlockPos const&,BlockID,uchar,int);
		void setBlockAndData(BlockPos const&,BlockID,uchar,int);
		void setBlockAndData(BlockPos const&,FullBlock,int);
		void setBlockAndData(BlockPos const&,FullBlock,int);
		void setBlockAndData(BlockPos const&,FullBlock,int,std::unique_ptr<BlockEntity,std::default_delete<BlockEntity>>);
		void setBlockAndData(BlockPos const&,FullBlock,int,std::unique_ptr<BlockEntity,std::default_delete<BlockEntity>>);
		void setBlockAndData(int,int,int,BlockID,uchar,int);
		void setBlockAndData(int,int,int,BlockID,uchar,int);
		void setBlockAndData(int,int,int,FullBlock,int);
		void setBlockAndData(int,int,int,FullBlock,int);
		void setBlockAndDataNoUpdate(int,int,int,FullBlock);
		void setBlockAndDataNoUpdate(int,int,int,FullBlock);
		void setBlockNoUpdate(int,int,int,BlockID);
		void setBlockNoUpdate(int,int,int,BlockID);
		void setBrightness(LightLayer const&,BlockPos const&,Brightness);
		void setBrightness(LightLayer const&,BlockPos const&,Brightness);
		void setBrightness(LightLayer const&,int,int,int,Brightness);
		void setExtraData(BlockPos const&,ushort);
		void setExtraData(BlockPos const&,ushort);
		void setGrassColor(int,BlockPos const&,int);
		void setGrassColor(int,BlockPos const&,int);
		void setTickingQueue(BlockTickingQueue &);
		void setTickingQueue(BlockTickingQueue &);
		void shouldFireEvents(LevelChunk &);
		void shouldFireEvents(LevelChunk &);
		void shouldFreeze(BlockPos const&,bool);
		void shouldFreeze(BlockPos const&,bool);
		void shouldFreezeIgnoreNeighbors(BlockPos const&);
		void shouldFreezeIgnoreNeighbors(BlockPos const&);
		void shouldThaw(BlockPos const&,bool);
		void updateLightIfOtherThan(LightLayer const&,BlockPos const&,Brightness);
		void updateLightIfOtherThan(LightLayer const&,BlockPos const&,Brightness);
		void updateNeighborsAt(BlockPos const&);
		void updateNeighborsAt(BlockPos const&);
		void updateNeighborsAt(BlockPos const&,BlockPos const&);
		void updateNeighborsAtExceptFromFacing(BlockPos const&,BlockPos const&,int);
		void ~BlockSource();
		void ~BlockSource();
		void ~BlockSource();
		void ~BlockSource();
		void ~BlockSource();
};
