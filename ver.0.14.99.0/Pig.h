#pragma once
class Pig{
	public:
		Pig(BlockSource &);
		Pig(BlockSource &);
		Pig(BlockSource &);
		void _canFeed(ItemInstance const*);
		void _canName(ItemInstance const*);
		void _canRide(void);
		void _canSaddle(ItemInstance const*);
		void _getAmbientSound(void);
		void _getAmbientSound(void);
		void _getControlledByPlayerGoal(void);
		void _getControlledByPlayerGoal(void);
		void _getDeathSound(void);
		void _getDeathSound(void);
		void _getHurtSound(void);
		void _getHurtSound(void);
		void _getInteractionType(Player &);
		void _getInteractionType(Player &);
		void _playStepSound(BlockPos const&,int);
		void _playStepSound(BlockPos const&,int);
		void addAdditionalSaveData(CompoundTag &);
		void addAdditionalSaveData(CompoundTag &);
		void canAddRider(Entity &);
		void canAddRider(Entity &);
		void canBeControlledByRider(void);
		void canBeControlledByRider(void);
		void canInteractWith(Player &);
		void canInteractWith(Player &);
		void createBreedOffspring(Animal &);
		void createBreedOffspring(Animal &);
		void dropAllArmor(void);
		void dropAllArmor(void);
		void getDeathLoot(void);
		void getDeathLoot(void);
		void getEntityTypeId(void);
		void getEntityTypeId(void);
		void getInteractText(Player &);
		void getInteractText(Player &);
		void getRideHeight(void);
		void getRideHeight(void);
		void hasSaddle(void);
		void hasSaddle(void);
		void hurt(EntityDamageSource const&,int);
		void hurt(EntityDamageSource const&,int);
		void interactWithPlayer(Player &);
		void interactWithPlayer(Player &);
		void isFood(ItemInstance const&);
		void isFood(ItemInstance const&);
		void onLightningHit(void);
		void onLightningHit(void);
		void readAdditionalSaveData(CompoundTag const&);
		void readAdditionalSaveData(CompoundTag const&);
		void registerAttributes(void);
		void registerAttributes(void);
		void setSaddle(bool);
		void setSaddle(bool);
		void travel(float,float);
		void travel(float,float);
		void useNewAi(void);
		void useNewAi(void);
		void ~Pig();
		void ~Pig();
};
