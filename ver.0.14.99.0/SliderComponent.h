#pragma once
class SliderComponent{
	public:
		SliderComponent(std::shared_ptr<UIControl> &);
		SliderComponent(std::shared_ptr<UIControl> &);
		void _finalizeSliderBox(void);
		void _finalizeSliderBox(void);
		void _getCurrentStep(void);
		void _getPercentage(void);
		void _handleButtonEvent(VisualTree &,ScreenInputContext &,ButtonScreenEventData const&);
		void _handleButtonEvent(VisualTree &,ScreenInputContext &,ButtonScreenEventData const&);
		void _handleControllerDirectionEvent(VisualTree &,ScreenInputContext &,ControllerDirectionEventData const&);
		void _handleControllerDirectionEvent(VisualTree &,ScreenInputContext &,ControllerDirectionEventData const&);
		void _handleHoverEvent(VisualTree &,HoverScreenEventData const&);
		void _handlePointerMoveEvent(VisualTree &,ScreenInputContext &,PointerMoveScreenEventData const&);
		void _moveSliderBox(glm::detail::tvec2<float>);
		void _moveSliderBox(glm::detail::tvec2<float>);
		void _sendSliderChangeEvent(ScreenInputContext &,bool);
		void _setCurrentStep(int);
		void _setPercentage(float);
		void _setSliderValue(int);
		void _setSliderValue(int);
		void _setTrackActive(bool);
		void _updateSliderFromDirection(ui::CardinalDirection);
		void _updateSliderFromDirection(ui::CardinalDirection);
		void _updateSliderFromPosition(glm::detail::tvec2<float> const&,bool);
		void _updateSliderFromPosition(glm::detail::tvec2<float> const&,bool);
		void clone(std::shared_ptr<UIControl> &);
		void clone(std::shared_ptr<UIControl> &);
		void findGroupIndex(void);
		void findGroupIndex(void);
		void getNumberSteps(void);
		void getNumberSteps(void);
		void getSliderBoxControl(void);
		void getSliderDirection(void);
		void getSliderDirection(void);
		void getSliderGroup(void);
		void getSliderProgress(void);
		void getSliderProgress(void);
		void getSliderValue(void);
		void isLocked(void);
		void isLocked(void);
		void receive(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent);
		void receive(VisualTree &,ScreenInputContext &,AnimationController &,ScreenEvent);
		void setNumberSteps(int);
		void setNumberSteps(int);
		void setSliderBoxControl(std::shared_ptr<UIControl> &);
		void setSliderBoxControl(std::shared_ptr<UIControl> &);
		void setSliderBoxTrackButton(short);
		void setSliderBoxTrackButton(short);
		void setSliderCollectionName(std::string const&);
		void setSliderCollectionName(std::string const&);
		void setSliderDirection(ui::OrientationType);
		void setSliderDirection(ui::OrientationType);
		void setSliderNameId(short);
		void setSliderNameId(short);
		void setSliderSpeed(float);
		void setSliderSpeed(float);
		void setSliderTimeout(float);
		void setSliderTimeout(float);
		void setSliderValue(int);
		void setSliderValue(int);
		void ~SliderComponent();
		void ~SliderComponent();
		void ~SliderComponent();
		void ~SliderComponent();
};
