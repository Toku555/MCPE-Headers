#pragma once
class Minecart{
	public:
		Minecart(Level *);
		Minecart(Level *,float,float,float);
		void activateMinecart(int,int,int,bool);
		void addAdditonalSaveData(CompoundTag *);
		void animateHurt(void);
		void applyNaturalSlowdown(void);
		void comeOffTrack(float);
		void createMinecart(Level *,float,float,float,int);
		void destroy(Entity *);
		void getAName(void);
		void getCustomName(void);
		void getDamage(void);
		void getDefaultDisplayData(void);
		void getDefaultDisplayOffset(void);
		void getDefaultDisplayTile(void);
		void getDisplayData(void);
		void getDisplayOffset(void);
		void getDisplayTile(void);
		void getEntityTypeId(void);
		void getHurtDir(void);
		void getHurtTime(void);
		void getPos(Vec3 &,float,float,float);
		void getPosOffs(Vec3 &,float,float,float,float);
		void getRideHeight(void);
		void getShadowHeightOffs(void);
		void getShadowRadius(void);
		void hasCustomDisplay(void);
		void hasCustomName(void);
		void hurt(Entity *,int);
		void isPickable(void);
		void isPushable(void);
		void lerpMotion(float,float,float);
		void lerpTo(float,float,float,float,float,int);
		void moveAlongTrack(int,int,int,float,float,int,int);
		void push(Entity *);
		void push(float,float,float);
		void readAdditionalSaveData(CompoundTag *);
		void remove(void);
		void setCustomDisplay(bool);
		void setCustomName(std::string const&);
		void setDamage(float);
		void setDisplayData(int);
		void setDisplayOffset(int);
		void setDisplayTile(int);
		void setHurtDir(int);
		void setHurtTime(int);
		void tick(void);
		void ~Minecart();
		void ~Minecart();
};
