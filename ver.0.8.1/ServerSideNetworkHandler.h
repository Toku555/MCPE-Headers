#pragma once
class ServerSideNetworkHandler{
	public:
		ServerSideNetworkHandler(Minecraft *,IRakNetInstance *);
		void allowIncomingConnections(bool);
		void allowIncomingPacketId(RakNet::RakNetGUID const&,int);
		void createNewPlayer(RakNet::RakNetGUID const&,LoginPacket *);
		void displayGameMessage(std::string const&,std::string const&);
		void entityAdded(Entity *);
		void entityRemoved(Entity *);
		void findPendingPlayer(RakNet::RakNetGUID const&);
		void getAddPacketFromEntity(Entity *);
		void getPlayer(RakNet::RakNetGUID const&);
		void handle(RakNet::RakNetGUID const&,AnimatePacket *);
		void handle(RakNet::RakNetGUID const&,ContainerClosePacket *);
		void handle(RakNet::RakNetGUID const&,ContainerSetContentPacket *);
		void handle(RakNet::RakNetGUID const&,ContainerSetSlotPacket *);
		void handle(RakNet::RakNetGUID const&,DropItemPacket *);
		void handle(RakNet::RakNetGUID const&,EntityDataPacket *);
		void handle(RakNet::RakNetGUID const&,EntityEventPacket *);
		void handle(RakNet::RakNetGUID const&,InteractPacket *);
		void handle(RakNet::RakNetGUID const&,LoginPacket *);
		void handle(RakNet::RakNetGUID const&,MessagePacket *);
		void handle(RakNet::RakNetGUID const&,MovePlayerPacket *);
		void handle(RakNet::RakNetGUID const&,PlayerActionPacket *);
		void handle(RakNet::RakNetGUID const&,PlayerArmorEquipmentPacket *);
		void handle(RakNet::RakNetGUID const&,PlayerEquipmentPacket *);
		void handle(RakNet::RakNetGUID const&,PlayerInputPacket *);
		void handle(RakNet::RakNetGUID const&,ReadyPacket *);
		void handle(RakNet::RakNetGUID const&,RemoveBlockPacket *);
		void handle(RakNet::RakNetGUID const&,RequestChunkPacket *);
		void handle(RakNet::RakNetGUID const&,RespawnPacket *);
		void handle(RakNet::RakNetGUID const&,SetEntityLinkPacket *);
		void handle(RakNet::RakNetGUID const&,SetHealthPacket *);
		void handle(RakNet::RakNetGUID const&,UseItemPacket *);
		void levelEvent(Player *,int,int,int,int,int);
		void levelGenerated(Level *);
		void numberOfConnections(void);
		void onDisconnect(RakNet::RakNetGUID const&);
		void onNewClient(RakNet::RakNetGUID const&);
		void onPlayerVerified(RestCallTagData const&);
		void onPlayerVerifiedFailed(RestCallTagData const&);
		void onReady_ClientGeneration(RakNet::RakNetGUID const&);
		void onReady_RequestedChunks(RakNet::RakNetGUID const&);
		void popPendingPlayer(RakNet::RakNetGUID const&);
		void redistributePacket(Packet *,RakNet::RakNetGUID const&);
		void sendLoginMessageLocal(int,RakNet::RakNetGUID const&,LoginPacket *);
		void sendLoginMessageMCO(int,RakNet::RakNetGUID const&,LoginPacket *);
		void sendWorldSeed(Player *,RakNet::RakNetGUID const&);
		void tileBrightnessChanged(int,int,int);
		void tileChanged(int,int,int);
		void tileEvent(int,int,int,int,int);
		void ~ServerSideNetworkHandler();
		void ~ServerSideNetworkHandler();
};
