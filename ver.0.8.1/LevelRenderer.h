#pragma once
class LevelRenderer{
	public:
		LevelRenderer(Minecraft *,std::shared_ptr<TextureAtlas>);
		void _buildShadowOverlay(Color4 const&);
		void _buildShadowVolume(void);
		void _buildStarsMesh(void);
		void _initResources(void);
		void _renderChunk(MeshBuffer &);
		void _renderShadow(float,Vec3 const&,float);
		void _renderStars(float);
		void _renderSunOrMoon(float,bool);
		void addParticle(ParticleType,float,float,float,float,float,float,int);
		void allChanged(void);
		void cullAndSort(FrustumCuller *,float,float);
		void deleteChunks(void);
		void entityAdded(Entity *);
		void gatherStats1(void);
		void generateSky(void);
		void getLayerFeature(int,bool);
		void levelEvent(Player *,int,int,int,int,int);
		void onAppResumed(void);
		void onAppSuspended(void);
		void playSound(std::string const&,float,float,float,float,float);
		void render(AABB const&);
		void renderChunks(int,float,bool);
		void renderClouds(float);
		void renderDebug(AABB const&,float);
		void renderEntities(Vec3,FrustumCuller *,bool,float);
		void renderFarChunks(float);
		void renderFilledHitSelect(Player *,float,Tile *,HitResult const&);
		void renderHit(Player *,HitResult const&,int,void *,float);
		void renderHitOutline(Player *,HitResult const&,int,void *,float);
		void renderHitSelect(Player *,HitResult const&,int,void *,float);
		void renderNameTags(float);
		void renderOutlineHitSelect(Player *,float,Tile *,HitResult const&);
		void renderShadows(std::multimap<int,Entity *,std::greater<int>,std::allocator<std::pair<int const,Entity *>>> const&,std::vector<TileEntity *,std::allocator<TileEntity *>> const&,float);
		void renderSky(float);
		void renderStencilChunks(float);
		void resortChunks(int,int,int);
		void setDirty(int,int,int,int,int,int);
		void setLevel(Level *);
		void setTilesDirty(int,int,int,int,int,int);
		void skyColorChanged(void);
		void takePicture(TripodCamera *,Entity *);
		void tick(void);
		void tileChanged(int,int,int);
		void updateDirtyChunks(Mob *,bool);
		void ~LevelRenderer();
		void ~LevelRenderer();
};
