#pragma once
class Squid{
	public:
		Squid(BlockSource &);
		void _getAmbientSound(void);
		void _getDeathSound(void);
		void _getHurtSound(void);
		void _getSoundVolume(void);
		void _randomInkDir(void);
		void aiStep(void);
		void canSpawn(bool);
		void checkForSteeringCollision(Vec3 const&,float,Vec3&);
		void chooseRandomDirection(Vec3 &);
		void dropDeathLoot(int);
		void getDeathLoot(void);
		void getEntityTypeId(void);
		void getExperienceReward(void);
		void getJumpPower(void);
		void getOldTentacleAngle(void);
		void getTentacleAngle(void);
		void getTy(void);
		void getWaterHeights(uchar &,float &,float &);
		void getXBodyRot(void);
		void getXBodyRotO(void);
		void getZBodyRot(void);
		void getZBodyRotO(void);
		void handleEntityEvent(EntityEvent);
		void hurt(EntityDamageSource const&,int);
		void normalTick(void);
		void registerAttributes(void);
		void setTx(float);
		void setTy(float);
		void setTz(float);
		void setXBodyRot(float &);
		void setXBodyRotO(float &);
		void setZBodyRot(float &);
		void setZBodyRotO(float &);
		void spawnInkParticles(void);
		void travel(float,float);
		void ~Squid();
		void ~Squid();
};
