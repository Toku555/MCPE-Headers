#pragma once
class ScreenView{
	public:
		void _broadcastDownTree(std::shared_ptr<UIControl> &,ScreenEvent);
		void _checkIsTextEditControl(std::shared_ptr<UIControl> &);
		void _directionChanged(DirectionId,CardinalDirection);
		void _directionHeld(DirectionId,CardinalDirection);
		void _forwardEventToAnimationControls(ScreenEvent const&);
		void _getControllerDirection(DirectionId);
		void _getScreenComponent(void);
		void _handleDirtyVisualTree(void);
		void _handlePointerLocation(glm::detail::tvec2<float> const&,bool);
		void _isValidControllerStick(DirectionId);
		void _processControllerDirection(DirectionId);
		void _processEvents(ScreenInputContext &);
		void _resetDirection(void);
		void _selectControl(std::shared_ptr<UIControl> &);
		void _selectNextFocusObject(CardinalDirection);
		void _sendPointerHeldEvents(void);
		void _sendScrollEvents(float,float);
		void _setFocusActive(bool);
		void _setKeyboardHeight(float);
		void applyInput(float);
		void closeOnPlayerHurt(void);
		void getController(void);
		void getFocusedControl(void);
		void getHeight(void);
		void getScreenName(void);
		void getSendTelemetry(void);
		void getWidth(void);
		void handleCaretLocation(int);
		void handleCommandEvent(VoiceCommand const&);
		void handleControlEvent(ScreenEvent);
		void handleDictationEvent(void);
		void handleDirection(DirectionId,float,float);
		void handleGazeGestureInput(short,float,float,float);
		void handleHoloInputModeChanged(HoloUIInputMode);
		void handleInputModeChanged(InputMode);
		void handleLicenseChanged(void);
		void handlePointerLocation(glm::detail::tvec2<float> const&);
		void ignoreAsTop(void);
		void isDebugRendering(void);
		void isModal(void);
		void isShowingMenu(void);
		void onFocusGained(void);
		void onFocusLost(void);
		void onGameEventNotification(ui::GameEventNotification);
		void onInternetUpdate(void);
		void onSetKeyboardHeight(float);
		void render(ScreenContext &);
		void renderGameBehind(void);
		void renderOnlyWhenTopMost(void);
		void screenDrawsLast(void);
		void screenIsNotFlushable(void);
		void setAssociatedBlockPos(BlockPos const&);
		void setDebugRendering(bool);
		void setSize(glm::detail::tvec2<float>);
		void setTextboxText(std::string const&);
		void setupAndRender(UIScreenContext &);
		void shouldStealMouse(void);
		void terminate(void);
		void tick(int,int);
		void toGUICoordinate(int,int,int &,int &);
		void ~ScreenView();
		void ~ScreenView();
};
