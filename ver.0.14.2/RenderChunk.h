#pragma once
class RenderChunk{
	public:
		RenderChunk(BlockPos const&);
		void _changeState(RenderChunk::State,RenderChunk::State);
		void _chooseMaterial(TerrainLayer,double,bool);
		void _initLayers(mce::MaterialPtr *,std::string const&);
		void _tryChangeState(RenderChunk::State,RenderChunk::State);
		void canSeeChunkLookingFrom(uchar,uchar);
		void distanceToSqr(Entity const*);
		void endFaceSort(void);
		void endRebuild(Vec3 const&);
		void faceSort(void);
		void getAverageBrightness(void);
		void getBlockIDTexture(void);
		void getBoundingBox(void);
		void getCenter(void);
		void getDataBounds(void);
		void getDataState(BlockSource &);
		void getFaceCenter(int);
		void getFacing(int);
		void getPosition(void);
		void getPriority(RenderChunk const&);
		void hasImmediateChange(void);
		void hasLayer(TerrainLayer);
		void initMaterials(mce::TextureGroup &);
		void isAllDark(void);
		void isBottom(void);
		void isCulled(void);
		void isDirty(void);
		void isEmpty(void);
		void isFaceSortDirty(void);
		void isPending(void);
		void isReady(void);
		void isRebuildState(RenderChunk::State);
		void isSkyLit(void);
		void isTop(void);
		void isVisible(int);
		void isVisited(uint);
		void makeReadyAsEmpty(void);
		void rebuild(bool);
		void render(TerrainLayer,double,bool);
		void reset(void);
		void setBoundingBox(AABB);
		void setCenter(BlockPos);
		void setDataBounds(Bounds);
		void setDirty(Tick,bool);
		void setPos(BlockPos const&);
		void setPosition(BlockPos);
		void setUnderwater(bool);
		void setVisibilityChanged(void);
		void setVisible(bool,uint);
		void sortFaces(void);
		void startFaceSort(std::unique_ptr<RenderChunkBuilder,std::default_delete<RenderChunkBuilder>>);
		void startRebuild(std::unique_ptr<RenderChunkBuilder,std::default_delete<RenderChunkBuilder>>);
		void updateDistanceFromPlayer(Vec3 const&);
		void updateFaceSortState(Vec3);
		void wasVisibileInPastFrames(void);
		void ~RenderChunk();
};
